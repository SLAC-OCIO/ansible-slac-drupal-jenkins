---
#Pull down the code, into the directories we just created
- name: Get slac websites from Github
  git: 
    repo: "{{ item.value.repo }}" 
    dest: "/var/www/{{ item.value.site_name }}"
    update: yes
    refspec: +refs/pull/*:refs/heads/*
  with_dict: "{{ slac_sites }}"

#Each Drupal site needs a settings file.  
- name: Copy SLAC sites settings files
  copy: 
    src: "{{ item.value.site_name }}.settings.php"
    dest: "{{ item.value.path}}/sites/default/settings.php"
    owner: "{{ ansible_user_id }}"
  with_dict: "{{ slac_sites }}"

#drush aliases make drupal development less challenging
- name: Create drush aliases
  template:
    src: drushrc.php.j2
    dest: "~/.drush/{{ item.value.site_name }}.drushrc.php"
    mode: 0755  
    owner: "{{ ansible_user_id }}"
  with_dict:  "{{ slac_sites }}"

# Check if the site has a DB currently
- name: Check DB status
  stat:  
    path: "/Users/{{ ansible_user_id }}/.slac_mac/{{ item.value.site_name }}.db_yes"
  with_dict:  "{{ slac_sites }}"
  register: db_yes

- name: Get Var status
  debug: var= '{{ db_yes }}'
  
# drop DB's from before
- name: drop DB's with bash
  command: "mysqladmin create {{ item.value.site_name }} -uroot"
  with_dict: "{{ slac_sites }}"
  when:  '{{ db_yes == true }}'
  

#Decompress archives
- name: Unarchive sql files to sql_src dir
  unarchive: 
    dest: '/usr/local/grail/files/sql_src'
    mode: 0655 
    owner: '{{ ansible_user_id }}' 
    src: "{{ item.path }}"
  with_items: '{{ sql_files.files }}'


#This builds a website locally, slac-features specifically

- name: Build sites locally
  command: "/usr/bin/php /var/sites/slac-features/rebuild/slac_ext_org.php"


# END databases -----------------------------------------------------------------------

# Begin Drupal
#create  sitename/sites/default/files directory
- name: Add Drupal Files dir.
  file: mode=0777  owner='{{ ansible_user_id }}'  path="/var/sites/{{ item.value.site_name }}/sites/default/files"  state=directory  
  with_dict:  '{{ slac_sites }}'


